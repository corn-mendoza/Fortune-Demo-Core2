@using Syncfusion.JavaScript;
@using Syncfusion.JavaScript.DataVisualization;
@model CloudFoundryViewModel
@{
    ViewData["Title"] = "Platform";
}
<div class="panel-heading">
    <div class="media">
        <a class="pull-left" href="http://pivotal.io">
            <img class="" src="~/images/Platform.png" title="Cloud Foundry" alt="PCF" width="40" height="40" />
        </a>
        <div class="media-body">
        <h2 class="media-heading">The Platform for .NET</h2>
        </div>
    </div>
    <h3>Secure, Resilient, and Scalable</h3>
    <p>Managing IIS can be a pain. PCF provides an enterprise ready platform for your .NET applications.</p>
</div>
<div class="media-object"><hr /></div>
<div class="row">
    <div class="col-md-5">
        <h4><b>Web Application</b></h4>
        <h5>Application: @Model.CloudFoundryApplication.ApplicationName</h5>
        <h5>Application ID: @Model.CloudFoundryApplication.ApplicationId</h5>
        <h5>Instance Index: @Model.CloudFoundryApplication.Instance_Index</h5>
        <h5>Instance IP: @Model.CloudFoundryApplication.InstanceIP</h5>
        <h5>Instance ID: @Model.CloudFoundryApplication.InstanceId</h5>
        <h5>Instance Port: @Model.CloudFoundryApplication.Port</h5>
        <h5>URL</h5>
        @foreach (var uri in Model.CloudFoundryApplication.Application_Uris)
        {
            <h6>@uri</h6>
        }
        <a class="btn btn-primary" asp-area="" asp-controller="Workshop" asp-action="Platform">Refresh &raquo;</a>
        <a class="btn btn-primary" asp-area="" asp-controller="Workshop" asp-action="ResetApplicationStats">Reset Stats &raquo;</a>
        <a class="btn btn-primary" asp-area="" asp-controller="Workshop" asp-action="Kill">Kill Instance &raquo;</a>
    </div>
    @foreach (var _key in Model.AppInstanceCounts.Keys)
    {
        <div class="col-md-3">
            <center>
                <ej-circular-gauge id="CircularGauge@_key" is-responsive="true" load="loadGaugeTheme" background-color="transparent" radius="90" width="180" height="170">
                    <e-circular-scale-collections>
                        <e-circular-scales radius="70" minimum="0" maximum="1000" major-interval-value="200" minor-interval-value="100" show-scale-bar="true" size="1" show-ranges="true">
                            <e-pointer-cap radius="10"></e-pointer-cap>
                            <e-circular-range-collections>
                                <e-circular-ranges size="5" distance-from-scale="-30" start-value="0" end-value="900"></e-circular-ranges>
                                <e-circular-ranges size="5" distance-from-scale="-30" start-value="900" end-value="1000" background-color="red">
                                </e-circular-ranges>
                                <e-circular-ranges size="5" distance-from-scale="-30" start-value="800" end-value="900" background-color="yellow">
                                </e-circular-ranges>
                            </e-circular-range-collections>
                            <e-pointer-collections>
                                <e-pointers value="@Convert.ToDouble(Model.AppInstanceCounts.GetValueOrDefault(_key, 0));" length="60" width="8" show-back-needle="true" back-needle-length="15"></e-pointers>
                            </e-pointer-collections>
                        </e-circular-scales>
                    </e-circular-scale-collections>
                </ej-circular-gauge>
                <h4>@Model.AppInstanceCounts.GetValueOrDefault(_key, 0)</h4>
                <h5><b>Instance @_key</b></h5>
            </center>
        </div>
    }
</div>
<div class="media-object"><hr /></div>
<div class="row">
    <div class="col-md-4">
        <h4>Logging on PAS</h4>
        <p>PAS works with your existing logging tools and enhances the capabilities when using the platform logging. Logging can be dynamically adjusted without having to restart the application.</p>
        <a class="btn btn-primary" href="@(Model.ConfigData.AppBaseUrl+Model.CloudFoundryApplication.ApplicationId)/logs" target="_blank"><b>Logging</b></a>
        <hr />
    </div>
    <div class="col-md-4">
        <h4>Request and Response Tracing</h4>
        <p>Understanding the request and response details can be helpful in tracking down problems with the application. Steeltoe enables additional capabilities of the platform that trace details not just by application but by instance.</p>
        <a class="btn btn-primary" href="@(Model.ConfigData.AppBaseUrl+Model.CloudFoundryApplication.ApplicationId)/trace" target="_blank"><b>Request Tracing</b></a>
        <hr />
    </div>
    <div class="col-md-4">
        <h4>Real Metrics for Developers</h4>
        <p>Getting metrics for your applications has never been easier. PAS provides developers the ability to view key metrics and correlate events in the log to give a deeper insight into the inner workings of the application.</p>
        <a class="btn btn-primary" href="@(Model.ConfigData.PCFMetricsUrl+Model.CloudFoundryApplication.ApplicationId)" target="_blank"><b>PCF Metrics</b></a>
        <hr />
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <h4>Health Contributers</h4>
        <p>Complex applications needs the ability to monitor all of the possible sources for problems. PAS gives developers the ability to build applications that are resilient to failures.</p>
        <a class="btn btn-primary" href="@(Model.ConfigData.AppBaseUrl+Model.CloudFoundryApplication.ApplicationId)" target="_blank"><b>Health Contributers</b></a>
    </div>
    <div class="col-md-4">
        <h4>Building a health checker</h4>
        <p>Creating a custom health checker for your application is easy with PAS and Steeltoe. Check out the source code to see how you can quickly get up and running with your own health checker.</p>
        <a class="btn btn-primary" href="@(Model.ConfigData.GithubRepoUrl)/blob/master/Fortune-Teller-UI/SqlServerHealthContributor.cs" target="_blank"><b>Source Code</b></a>
    </div>
    <div class="col-md-4">
        <h4>Schedule jobs and tasks</h4>
        <p>PAS provides support for running batch jobs and other tasks such as data migrations. These activities can be scheduled through your own scheduling system or using Pivotal's scheduler.</p>
        <a class="btn btn-primary" href="@(Model.ConfigData.AppBaseUrl+Model.CloudFoundryApplication.ApplicationId)/tasks" target="_blank"><b>Tasks and Jobs</b></a>
    </div>
</div>
<style class="cssStyles">
    .tooltipDivcontainer {
        background-color: #E94649;
        color: white;
        width: 130px;
    }

    #Tooltip > div:first-child {
        float: left;
    }

    #Tooltip #value {
        float: right;
        height: 50px;
        width: 63px;
    }

        #Tooltip #value > div {
            margin: 5px 5px 5px 5px;
        }

    #Tooltip #efpercentage {
        font-size: 20px;
        font-family: segoe ui;
    }

    #Tooltip #ef {
        font-size: 12px;
        font-family: segoe ui;
    }

    #eficon {
        background-image: url("../images/chart/eficon.png");
        height: 60px;
        width: 60px;
        background-repeat: no-repeat;
    }
</style>
