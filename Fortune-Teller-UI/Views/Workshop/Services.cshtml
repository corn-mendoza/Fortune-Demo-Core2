@using Syncfusion.JavaScript;
@using Syncfusion.JavaScript.DataVisualization;
@model CloudFoundryViewModel
@{
    ViewData["Title"] = "Services";
}
<div class="panel-heading">
    <div class="media">
        <a class="pull-left" href="http://pivotal.io">
            <img class="" src="~/images/Services.png" title="Cloud Foundry" alt="PCF" width="40" height="40" />
        </a>
        <div class="media-body">
            <h2 class="media-heading">Cloud Patterns for .NET</h2>
        </div>
    </div>
    <h3>Cloud Native Design Patterns using Spring Cloud Services and Steeltoe</h3>
    <p>Designing applications to run natively in the cloud can be hard. Steeltoe can help developers quickly implement these design patterns by leveraging configuration services, service discovery, circuit breakers, and management services available in Spring Cloud Services.</p>
</div>
<div class="media-object"><hr /></div>
<div class="panel-primary" align="center">
    <h3>Your New Fortune sent from the Fortune Service</h3>
    <h4><i>@ViewData["MyFortune"]</i></h4>
</div>
<div class="media-object"><hr /></div>
<div class="row">
    <div class="col-md-5">
        <h4><b>Service Information</b></h4>
        <h5>Responding Fortune Service instance: <b>@ViewData["FortuneIndex"]</b></h5>
        <h5><b>Requested service endpoint sent to discovery service</b></h5>
        <h5>@ViewData["FortuneUrl"]</h5>
        <h5><b>Service endpoint sent back from discovery service</b></h5>
        <h5><a class="nav-link" href="@ViewData["FortuneDiscoveryUrl"]swagger" target="_blank">@ViewData["FortuneDiscoveryUrl"]</a></h5>
        <div class="panel-group">
            <a class="btn btn-primary" asp-area="" asp-controller="Workshop" asp-action="Refresh">Refresh</a>
            <a class="btn btn-primary" asp-area="" asp-controller="Workshop" asp-action="ResetServiceStats">Reset Stats</a>
        </div>
    </div>
    <div class="col-md-3">
        <ej-chart id="chartInstances" can-resize="false" load="loadTheme">
            <e-primary-x-axis start-from-zero="false" range-padding="@ChartRangePadding.Auto">
                <e-title text="Instance #"></e-title>
                <e-range max="@(Model.GetServiceInstanceCounts().Max(w => w.Key) + 1);" min="-1" interval="1"></e-range>
            </e-primary-x-axis>
            <e-primary-y-axis range-padding="@ChartRangePadding.Auto" start-from-zero="false" label-format="{value}" edge-label-placement="None">
                <e-title text="Count"></e-title>
                <e-range min="0" max="@(Model.GetServiceInstanceCounts().Max(w=> w.Value) + 10);" interval="25"></e-range>
            </e-primary-y-axis>
            <e-title text="Fortune Service Instance Counts"></e-title>
            <e-size height="220"></e-size>
            <e-legend visible="false"></e-legend>
            <e-common-series-options type="@SeriesType.Column" enable-animation="true">
                <e-marker shape="@ChartShape.None" visible="false">
                    <e-border width="2"></e-border>
                    <e-Size height="10" width="10"></e-Size>
                </e-marker>
            </e-common-series-options>
            <e-chart-series>
                <e-series name="Fortune Service" datasource="@Model.GetServiceInstanceCounts();" x-name="Key" y-name="Value" visible-on-legend="Visible">
                    <e-marker>
                        <e-data-label text-position="Middle" visible="true">
                            <e-font color="white"></e-font>
                        </e-data-label>
                    </e-marker>
                    <e-chart-tooltip visible="true" template="Tooltip"></e-chart-tooltip>
                </e-series>
            </e-chart-series>
        </ej-chart>
    </div>
</div>
<div class="media-object"><hr /></div>
<div class="row">
    <div class="col-md-4">
        <h4>Handle issues with Circuit Breakers</h4>
        <p>Circuit breakers let applications handle unexpected errors with services. View the dashboard to help identify problems and resolve issues that affect the user's experience.</p>
        <a class="btn btn-primary" href="@Model.ConfigData.HystrixDashboardUrl" target="_blank">Hystrix Dashboard &raquo;</a>
        <p />
        <hr />
        <h4>Implementing Service Discovery</h4>
        <p>Implementing service discovery patterns will help improve the resilience of your applications. Steeltoe helps you easily implement service discovery in new and legacy .NET Framework and .NET Core applications.</p>
        <a class="btn btn-primary" href="@Model.ConfigData.EurekaDashboardUrl" target="_blank">Eureka Dashboard &raquo;</a>
        <p />
        <hr />
        <h4>Web API Services found through discovery</h4>
        <p>Service discovery helps applications find and access available endpoints through a scalable and resilient directory.</p>
        <ul>
            @foreach (var service in Model.discoveryClient.Services)
            {
                <li>@service</li>
            }
        </ul>
    </div>
    <div class="col-md-4">
        <h4>Steeltoe support for .NET Framework</h4>
        <p>Pivotal Application Services can support services written using .NET Framework. .NET Framework applications can also implement Cloud Native Patterns using Steeltoe.</p>
        <a class="btn btn-primary" href="@Model.ConfigData.SwaggerUrl" target="_blank">Fortune Service .NET4.6 using Swagger &raquo;</a>        
        <hr />
        <h4>Bound services for this application</h4>
        <p>Binding to services is one way .NET applications can integrate with functionality required for business applications. Developers can take advantage of services made available through the platform or continue to use existing services.</p>
        <ul>
            @foreach (var service in Model.CloudFoundryServices.ServicesList)
        {
            <li>@service.Label: @service.Name</li>
    }
        </ul>
        <hr />
        <h4>Available services on the marketplace</h4>
        <p>The marketplace is where you can access the services available to your organization. There is a large and ever growing number of vendors that have integrated their services into Pivotal Cloud Foundry. The marketplace can also be leveraged to distribute your application or services to others in your company.</p>
        <a class="btn btn-primary" href="@Model.ConfigData.MarketplaceUrl" target="_blank">Marketplace for PAS &raquo;</a>
    </div>
    <div class="col-md-4">
        <h4>Create a web server load </h4>
        <p>Pivotal Application Services can scale to meet the needs of your applications. Don't let blocking calls to things like logging slow your application down.</p>
        <form asp-controller="Workshop"
              asp-action="CreateLoad"
              method="post">
            Number of calls:
            <input width="30" type="number" name="Count" value="100" />
            <input type="submit" value="Go" class="btn btn-primary"/>
        </form>
        <div class="clearfix"><hr /></div>
        <h4>Last 10 Fortunes stored in cache</h4>
        <ul>
            @foreach (var fortune in Model.FortuneHistory)
            {
                <li>@fortune</li>
            }
        </ul>
    </div>
</div>
<style class="cssStyles">
    .tooltipDivcontainer {
        background-color: #E94649;
        color: white;
        width: 130px;
    }

    #Tooltip > div:first-child {
        float: left;
    }

    #Tooltip #value {
        float: right;
        height: 50px;
        width: 63px;
    }

        #Tooltip #value > div {
            margin: 5px 5px 5px 5px;
        }

    #Tooltip #efpercentage {
        font-size: 20px;
        font-family: segoe ui;
    }

    #Tooltip #ef {
        font-size: 12px;
        font-family: segoe ui;
    }

    #eficon {
        background-image: url("../images/chart/eficon.png");
        height: 60px;
        width: 60px;
        background-repeat: no-repeat;
    }
</style>
