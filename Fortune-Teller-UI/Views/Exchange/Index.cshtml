<script src="http://knockoutjs.com/downloads/knockout-3.4.2.debug.js"></script>
<script src="/js/knockout.mapping-latest.debug.js"></script>
<script src="/js/signalr-client.min.js"></script>
<link rel="stylesheet" href="/css/foundation.css" />
@*<link rel="stylesheet" href="/css/app.css" />*@
<script src="/js/vendor/modernizr.js"></script>
<div class="jumbotron">
    <div class="media">
        <a class="pull-left" href="http://pivotal.io">
            <img class="" src="~/images/icon_pivotal_generic@2x.png" title="Cloud Foundry" alt="PCF" width="70" height="70" />
        </a>
        <div class="media-body">
            <h1 class="media-heading">PCF Exchange</h1>
        </div>
    </div>
    <p class="lead">Bringing all of the capabilities of Pivotal Cloud Foundry together</p>
    <p class="lead">This application features all of the features available for .NET developers on Cloud Foundry.  Whether you are re-platforming legacy applications or creating the next generation cloud native applications, PCF can accelerate your time to market while reducing the cost to operate.</p>
    <p><a href="http://apps.sys.islands.cloud" class="btn btn-primary btn-lg">Learn More &raquo;</a></p>
</div>
<div class="panel-default">
    <h3>Dynamic Discovery Service Endpoints</h3>
    <h5>Order Manager Service Endpoint: @ViewBag.OMS</h5>
    <h5>Market Data Service Endpoint: @ViewBag.MDS</h5>
</div>
<script>
        $(() => {
            var OMS_URL = "@ViewBag.OMS";
            var MDS_URL = "@ViewBag.MDS";


            var OrderViewModel = function() {
                var self = this;
                self.clientID = ko.observable("andrew");
                self.clOrdID = ko.observable();
                self.orderId = ko.observable();
                self.price = ko.observable();
                self.side = ko.observable();
                self.orderQty = ko.observable();
                self.ordType = ko.observable("Limit");
                self.cumQty = ko.observable();
                self.transactTime = ko.observable();
                self.lastPx = ko.observable();
                self.lastQty = ko.observable();
                self.symbol = ko.observable("BTCUSD");
            };

            var Tick = function() {
                var self = this;
                self.symbol = ko.observable();
                self.price = ko.observable();
                self.lastPrice = ko.observable();
                self.volume = ko.observable();
                self.change = ko.computed(() => self.price() - self.lastPrice());
                self.changePercentage = ko.computed(() => self.change() * 100 / self.lastPrice())
                self.cssclass = ko.computed(() => {
                    return parseInt(this.price()) < 0 ? "negative_value" : "";
                });
            };

            var ViewModel = function() {
                var self = this;
                self.order = new OrderViewModel();

                self.openOrders = ko.observableArray();
                self.completedOrders = ko.observableArray();
                self.ticks = new ko.observableArray();

                self.sides = ["Buy","Sell"];
                self.symbols = ko.observableArray(); //["BTCUSD","CADUSD"];
                self.orderTypes = ["Market","Limit"]
                self.isPriceEnabled = ko.computed(function() {
                    return self.order.ordType() == "Limit";

                })

                self.NewOrder = () => {

                    self.order.clOrdID(guid());
                    //self.order.orderId(guid());
                    $.ajax({
                        type: "POST",
                        data : ko.toJSON(self.order),
                        url: OMS_URL + "api/order",
                        contentType: "application/json"
                    }).then(result => {
                        if (result.execType === "Rejected") {
                            var x = document.getElementById("reject");
                            x.className = "show";
                            setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000);
                        }
                        self.GetOrders();
                    });
                }
                self.GetExchanges = () => {
                    $.ajax({
                        type: "GET",
                        url: OMS_URL + "api/exchanges" ,
                        contentType: "application/json"
                    }).then(result => {
                        self.symbols.removeAll();
                        for(var i=0;i<result.length;i++)
                        {
                            self.symbols.push(result[i]);
                        }

                    });
                }
                self.GetOrders = () => {
                    $.ajax({
                        type: "GET",
                        url: OMS_URL + "api/client/" + self.order.clientID() + "/orders" ,
                        contentType: "application/json"
                    }).then(result => {
                        self.openOrders.removeAll();
                        self.completedOrders.removeAll();
                        for (var i = 0, len = result.length; i < len; i++) {
                            var execution = ko.mapping.fromJS(result[i]);
                            if (execution.ordStatus() === "Filled"
                                || execution.ordStatus() === "Canceled") {
                                self.completedOrders.push(execution);
                            } else {
                                self.openOrders.push(execution);
                            }
                        }
                    })
                }

                self.CancelOrder = id => {
                    $.ajax({
                        type: "DELETE",
                        url: OMS_URL + "api/client/" + self.order.clientID() + "/order/" + id,
                        contentType: "application/json"
                    }).then(result => {
                        self.GetOrders();
                    });
                }
            };
            var viewModel = new ViewModel();

            ko.applyBindings(viewModel);
            viewModel.GetOrders();
            viewModel.GetExchanges();

            var logger = new signalR.ConsoleLogger(signalR.LogLevel.Information);
            var hubConnection = new signalR.HubConnection(MDS_URL + 'trade', { transport: signalR.TransportType.WebSockets, logger: logger });
            hubConnection.on('tick', data => {

                var existingIndex = viewModel.ticks().findIndex(x => x.symbol() == data.symbol);
                var tick;
                if(existingIndex >= 0)
                {
                    tick = viewModel.ticks()[existingIndex];
                }
                else
                {
                    tick = new Tick();
                    viewModel.ticks.push(tick);
                }
                tick.symbol(data.symbol);
                tick.volume(data.volume);
                tick.lastPrice(data.lastPrice);
                tick.price(data.price);

            });
            hubConnection.start();

            function guid() {
                function s4() {
                    return Math.floor((1 + Math.random()) * 0x10000)
                        .toString(16)
                        .substring(1);
                }

                return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
                    s4() + '-' + s4() + s4() + s4();
            }
        });

        //Conditional formatting for negative tick change values
        $(document).ready(function(){
            $('.change_value_element').each(function() {
            if (parseInt($(this).text()) < 0) {
                $(this).addClass('negative_value');
            }});

            $('.change_percentage_element').each(function() {
            if (parseInt($(this).text()) < 0) {
                $(this).addClass('negative_value');
            }});
        });
</script>

<form>
    <fieldset>
        <legend>Client Info</legend>
        <div class="row">
            <div class="large-6 columns">
                <div class="row collapse prefix-radius">
                    <div class="small-3 columns">
                        <span class="prefix">Client ID:</span>
                    </div>
                    <div class="small-9 columns">
                        <input class="data-bind" data-bind="value: order.clientID">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="large-6 columns">
                    <div class="row collapse prefix-radius">
                        <div class="small-3 columns">
                            <span class="prefix">Qty:</span>
                        </div>
                        <div class="small-9 columns">
                            <input class="data-bind" data-bind="value: order.orderQty">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="large-6 columns">
                <div class="row collapse prefix-radius">
                    <div class="small-3 columns">
                        <span class="prefix">Price:</span>
                    </div>
                    <div class="small-9 columns">
                        <input class="data-bind" data-bind="value: order.price, enable: isPriceEnabled">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="large-6 columns">
                    <div class="row collapse prefix-radius">
                        <div class="small-3 columns">
                            <span class="prefix">Side:</span>
                        </div>
                        <div class="small-9 columns">
                            <select data-bind="options: sides, value: order.side"></select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="large-6 columns">
                <div class="row collapse prefix-radius">
                    <div class="small-3 columns">
                        <span class="prefix">Type:</span>
                    </div>
                    <div class="small-9 columns">
                        <select data-bind="options: orderTypes, value: order.ordType"></select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="large-6 columns">
                    <div class="row collapse prefix-radius">
                        <div class="small-3 columns">
                            <span class="prefix">Symbol:</span>
                        </div>
                        <div class="small-9 columns">
                            <select data-bind="options: symbols, value: order.symbol"></select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <button data-bind="click: NewOrder">Place Order</button>
    </fieldset>
</form><br>
<h3>Orders</h3>
<div class="tab-container">
    <ul class="tabs" data-tab="">
        <li class="tab-title active">
            <a href="#panel1">Open</a>
        </li>
        <li class="tab-title">
            <a href="#panel2">History</a>
        </li>
    </ul>
</div>
<div class="tabs-content">
    <div class="content active" id="panel1">
        <table >
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Symbol</th>
                    <th>Type</th>
                    <th>Qty</th>
                    <th>Price</th>
                    <th>LastPx</th>
                    <th>LastQty</th>
                    <th>CumQty</th>
                    <th>LastCommission</th>
                    <th>Side</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody data-bind="foreach: openOrders">
                <tr>
                    <td data-bind="text: orderId"></td>
                    <td data-bind="text: symbol"></td>
                    <td data-bind="text: ordType"></td>
                    <td data-bind="text: orderQty"></td>
                    <td data-bind="text: price"></td>
                    <td data-bind="text: lastPx"></td>
                    <td data-bind="text: lastQty"></td>
                    <td data-bind="text: cumQty"></td>
                    <td data-bind="text: lastCommission"></td>
                    <td data-bind="text: side"></td>
                    <td data-bind="text: ordStatus"></td>
                    <td><button data-bind="click: $parent.CancelOrder.bind($data, $data.orderId())">Cancel</button></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="content" id="panel2">
        <table >
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Symbol</th>
                    <th>Type</th>
                    <th>Qty</th>
                    <th>Price</th>
                    <th>LastPx</th>
                    <th>LastQty</th>
                    <th>CumQty</th>
                    <th>LastCommission</th>
                    <th>Side</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody data-bind="foreach: completedOrders">
                <tr>
                    <td data-bind="text: orderId"></td>
                    <td data-bind="text: symbol"></td>
                    <td data-bind="text: ordType"></td>
                    <td data-bind="text: orderQty"></td>
                    <td data-bind="text: price"></td>
                    <td data-bind="text: lastPx"></td>
                    <td data-bind="text: lastQty"></td>
                    <td data-bind="text: cumQty"></td>
                    <td data-bind="text: lastCommission"></td>
                    <td data-bind="text: side"></td>
                    <td data-bind="text: ordStatus"></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<h3>Ticker</h3>
<table>
    <thead>
        <tr>
            <th>Symbol</th>
            <th>Price</th>
            <th>Change</th>
            <th>Change (%)</th>
            <th>Volume</th>
        </tr>
    </thead>
    <tbody data-bind="foreach: ticks">
        <tr>
            <td data-bind="text: symbol"></td>
            <td data-bind="text: price"></td>
            <td class="change_value_element" data-bind="text: change"></td>
            <td class="change_percentage_element" data-bind="text: changePercentage"></td>
            <td data-bind="text: volume"></td>
        </tr>
    </tbody>
</table>
<div id="reject">Order was rejected</div>
<script src="js/vendor/jquery.js">
</script>
<script src="js/foundation.min.js">
</script>
<script>
    $(document).foundation();

</script>
